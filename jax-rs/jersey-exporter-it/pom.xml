<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Project's parent -->
    <parent>
        <groupId>org.ow2.chameleon.rose</groupId>
        <artifactId>rose-parent</artifactId>
        <version>1.0.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

	<!-- Description of the project -->
	<groupId>org.ow2.chameleon.rose.rest</groupId>
	<artifactId>jersey-exporter-it</artifactId>
	<name>OW2 Chameleon - RoSe JAX-RS Exporter[IntegrationTest]</name>
	<packaging>jar</packaging>
	<description>OW2 Chameleon ROSE JAX-RS Exporter Integration Test, contains the ROSE jax-rs exporter integration test</description>

	<properties>
		<!-- Dependencies version -->
		<ipojo.version>1.6.8</ipojo.version>
		<osgi.version>4.2.0</osgi.version>
		<jersey.version>1.9</jersey.version>
		<javax.servlet.version>2.5</javax.servlet.version>
		<mockito.version>1.7</mockito.version>
		<grizzly.version>1.9.36</grizzly.version>
		
		<!-- Plugins version-->
		<compiler.plugin.version>2.1</compiler.plugin.version>
		
		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<!-- Project dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>${osgi.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ow2.chameleon.rose</groupId>
			<artifactId>rose-core</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ow2.chameleon.rose.rest</groupId>
			<artifactId>jersey-exporter</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>	
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
			<version>1.4.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api-osgi</artifactId>
		    <version>2.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ow2.chameleon.testing</groupId>
			<artifactId>osgi-helpers</artifactId>
			<version>0.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ow2.chameleon.rose.testing</groupId>
			<artifactId>rose-helpers</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.grizzly.osgi</groupId>
			<artifactId>grizzly-httpservice-bundle</artifactId>
			<version>${grizzly.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Pax Exam API: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		
		<!-- During runtime Pax Exam will discover the OSGi container to use by 
			searching metadata available into classpath. Pax Exam comes with a default 
			container that uses [Pax Runner] for implementing the container requirements: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-default
    			</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
			
		</dependency>
		<!-- If your test code is based on JUnit you will have to have the Junit 
			support artifact: -->
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit</artifactId>
			<version>1.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- TinyBundle -->
		<dependency>
			<groupId>org.ops4j.pax.swissbox</groupId>
			<artifactId>pax-swissbox-tinybundles</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.base</groupId>
			<artifactId>ops4j-base</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.swissbox</groupId>
			<artifactId>pax-swissbox-bnd</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			
			<!-- Test Plugin -->
			<plugin>
				<groupId>org.apache.servicemix.tooling</groupId>
				<artifactId>depends-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<id>generate-depends-file</id>
						<goals>
							<goal>generate-depends-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

